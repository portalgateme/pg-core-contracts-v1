/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ETHTornado,
  ETHTornadoInterface,
} from "../../../contracts/tornado-core/ETHTornado";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVerifier",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "contract IHasher",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_denomination",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_merkleTreeHeight",
        type: "uint32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "leafIndex",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "nullifierHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "relayer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [],
    name: "FIELD_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "commitments",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "denomination",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_commitment",
        type: "bytes32",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filledSubtrees",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IHasher",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract IHasher",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
    ],
    name: "isSpent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_nullifierHashes",
        type: "bytes32[]",
      },
    ],
    name: "isSpentArray",
    outputs: [
      {
        internalType: "bool[]",
        name: "spent",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_proof",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
      {
        internalType: "address payable",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_relayer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_refund",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c0604052600380546001600160401b03191690553480156200002157600080fd5b50604051620025be380380620025be8339810160408190526200004491620008ab565b83838383808360008263ffffffff1611620000b25760405162461bcd60e51b815260206004820152602360248201527f5f6c6576656c732073686f756c642062652067726561746572207468616e207a60448201526265726f60e81b60648201526084015b60405180910390fd5b60208263ffffffff16106200010a5760405162461bcd60e51b815260206004820152601e60248201527f5f6c6576656c732073686f756c64206265206c657373207468616e20333200006044820152606401620000a9565b6000805463ffffffff191663ffffffff84161781556001600160a01b0382166080525b8263ffffffff168163ffffffff1610156200017e576200015363ffffffff821662000249565b63ffffffff821660009081526001602052604090205580620001758162000925565b9150506200012d565b506200019c620001906001846200094b565b63ffffffff1662000249565b6000805260026020527fac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b5550506001600455816200022b5760405162461bcd60e51b815260206004820152602560248201527f64656e6f6d696e6174696f6e2073686f756c6420626520677265617465722074604482015264068616e20360dc1b6064820152608401620000a9565b506001600160a01b0390921660a05250600555506200097292505050565b6000816000036200027b57507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c919050565b81600103620002ab57507f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d919050565b81600203620002db57507f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c200919050565b816003036200030b57507f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb919050565b816004036200033b57507f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c9919050565b816005036200036b57507f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb54959919050565b816006036200039b57507f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c919050565b81600703620003cb57507f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb4919050565b81600803620003fb57507f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff80919050565b816009036200042a57507e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c007919050565b81600a036200045a57507f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e30919050565b81600b036200048a57507f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e5919050565b81600c03620004ba57507f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f919050565b81600d03620004ea57507f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd919050565b81600e036200051a57507f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb108919050565b81600f036200054a57507f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b6919050565b816010036200057a57507f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db61854919050565b81601103620005aa57507f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea919050565b81601203620005da57507f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d919050565b816013036200060a57507f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc05919050565b816014036200063a57507f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d4919050565b816015036200066a57507f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b2967919050565b816016036200069a57507f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc3453919050565b81601703620006ca57507f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c48919050565b81601803620006fa57507f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd1919050565b816019036200072a57507f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c919050565b81601a036200075a57507f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce99919050565b81601b036200078a57507f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f354919050565b81601c03620007b957507e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d919050565b81601d03620007e957507f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f427919050565b81601e036200081957507f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb919050565b81601f036200084957507f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc919050565b60405162461bcd60e51b815260206004820152601360248201527f496e646578206f7574206f6620626f756e6473000000000000000000000000006044820152606401620000a9565b6001600160a01b0381168114620008a857600080fd5b50565b60008060008060808587031215620008c257600080fd5b8451620008cf8162000892565b6020860151909450620008e28162000892565b60408601516060870151919450925063ffffffff811681146200090457600080fd5b939692955090935050565b634e487b7160e01b600052601160045260246000fd5b600063ffffffff8083168181036200094157620009416200090f565b6001019392505050565b63ffffffff8281168282160390808211156200096b576200096b6200090f565b5092915050565b60805160a051611c18620009a66000396000818161019b01526105a501526000818161041c015261158c0152611c186000f3fe60806040526004361061012a5760003560e01c80639fa12d0b116100ab578063e5285dcc1161006f578063e5285dcc14610386578063e8295588146103b6578063ec732959146103d6578063ed33639f1461040a578063f178e47c1461043e578063fc7e9c6f1461046b57600080fd5b80639fa12d0b146102da578063b214faa514610307578063ba70f7571461031a578063c2b40ae414610344578063cd87a3b41461037157600080fd5b80636d9833e3116100f25780636d9833e314610237578063839df945146102575780638bca6d16146102875780638ea3099e1461029d57806390eeb02b146102bd57600080fd5b806317cc915c1461012f57806321a0adb6146101745780632b7ac3f314610189578063414a37ba146101d55780634ecf518b14610205575b600080fd5b34801561013b57600080fd5b5061015f61014a3660046116da565b60066020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b610187610182366004611713565b610490565b005b34801561019557600080fd5b506101bd7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161016b565b3480156101e157600080fd5b506101f7600080516020611bc383398151915281565b60405190815260200161016b565b34801561021157600080fd5b506000546102229063ffffffff1681565b60405163ffffffff909116815260200161016b565b34801561024357600080fd5b5061015f6102523660046116da565b6107a9565b34801561026357600080fd5b5061015f6102723660046116da565b60076020526000908152604090205460ff1681565b34801561029357600080fd5b506101f760055481565b3480156102a957600080fd5b506101f76102b83660046117c9565b610827565b3480156102c957600080fd5b506003546102229063ffffffff1681565b3480156102e657600080fd5b506102fa6102f53660046117fe565b6109f4565b60405161016b9190611873565b6101876103153660046116da565b610aba565b34801561032657600080fd5b5060035463ffffffff166000908152600260205260409020546101f7565b34801561035057600080fd5b506101f761035f3660046116da565b60026020526000908152604090205481565b34801561037d57600080fd5b50610222601e81565b34801561039257600080fd5b5061015f6103a13660046116da565b60009081526006602052604090205460ff1690565b3480156103c257600080fd5b506101f76103d13660046116da565b610ba7565b3480156103e257600080fd5b506101f77f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b34801561041657600080fd5b506101bd7f000000000000000000000000000000000000000000000000000000000000000081565b34801561044a57600080fd5b506101f76104593660046116da565b60016020526000908152604090205481565b34801561047757600080fd5b5060035461022290640100000000900463ffffffff1681565b6104986111ca565b6005548211156104ef5760405162461bcd60e51b815260206004820152601a60248201527f4665652065786365656473207472616e736665722076616c756500000000000060448201526064015b60405180910390fd5b60008581526006602052604090205460ff161561054e5760405162461bcd60e51b815260206004820152601f60248201527f546865206e6f746520686173206265656e20616c7265616479207370656e740060448201526064016104e6565b610557866107a9565b6105a35760405162461bcd60e51b815260206004820152601c60248201527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f740000000060448201526064016104e6565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663695ef6f989896040518060c001604052808b60001c81526020018a60001c81526020018960405160200161061a919060609190911b6bffffffffffffffffffffffff1916815260140190565b60408051601f1981840301815291815281516020928301208352516bffffffffffffffffffffffff1960608c901b16818301529101906034016040516020818303038152906040528051906020012060001c8152602001878152602001868152506040518463ffffffff1660e01b8152600401610699939291906118b9565b6020604051808303816000875af11580156106b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106dc9190611917565b6107215760405162461bcd60e51b815260206004820152601660248201527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b60448201526064016104e6565b6000858152600660205260409020805460ff1916600117905561074684848484611223565b604080516001600160a01b03868116825260208201889052918101849052908416907fe9e508bad6d4c3227e881ca19068f099da81b5164dd6d62b2eaf1e8bc6c349319060600160405180910390a261079f6001600455565b5050505050505050565b60008181036107ba57506000919050565b60035463ffffffff16805b63ffffffff811660009081526002602052604090205484036107eb575060019392505050565b8063ffffffff166000036107fd5750601e5b8061080781611956565b9150508163ffffffff168163ffffffff16036107c5575060009392505050565b6000600080516020611bc383398151915283106108865760405162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c6460448201526064016104e6565b600080516020611bc383398151915282106108ed5760405162461bcd60e51b815260206004820152602160248201527f5f72696768742073686f756c6420626520696e7369646520746865206669656c6044820152601960fa1b60648201526084016104e6565b60405163f47d33b560e01b81526004810184905260006024820181905284916001600160a01b0387169063f47d33b5906044016040805180830381865afa15801561093c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109609190611976565b9092509050600080516020611bc383398151915284830860405163f47d33b560e01b815260048101829052602481018390529092506001600160a01b0387169063f47d33b5906044016040805180830381865afa1580156109c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e99190611976565b509695505050505050565b60608167ffffffffffffffff811115610a0f57610a0f6119b0565b604051908082528060200260200182016040528015610a38578160200160208202803683370190505b50905060005b82811015610ab357610a77848483818110610a5b57610a5b6119c6565b9050602002013560009081526006602052604090205460ff1690565b15610aa1576001828281518110610a9057610a906119c6565b911515602092830291909101909101525b80610aab816119dc565b915050610a3e565b5092915050565b610ac26111ca565b60008181526007602052604090205460ff1615610b2b5760405162461bcd60e51b815260206004820152602160248201527f54686520636f6d6d69746d656e7420686173206265656e207375626d697474656044820152601960fa1b60648201526084016104e6565b6000610b368261146e565b6000838152600760205260409020805460ff191660011790559050610b59611661565b6040805163ffffffff8316815242602082015283917fa945e51eec50ab98c161376f0db4cf2aeba3ec92755fe2fcd388bdbbb80ff196910160405180910390a250610ba46001600455565b50565b600081600003610bd857507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c919050565b81600103610c0757507f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d919050565b81600203610c3657507f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c200919050565b81600303610c6557507f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb919050565b81600403610c9457507f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c9919050565b81600503610cc357507f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb54959919050565b81600603610cf257507f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c919050565b81600703610d2157507f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb4919050565b81600803610d5057507f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff80919050565b81600903610d7e57507e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c007919050565b81600a03610dad57507f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e30919050565b81600b03610ddc57507f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e5919050565b81600c03610e0b57507f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f919050565b81600d03610e3a57507f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd919050565b81600e03610e6957507f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb108919050565b81600f03610e9857507f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b6919050565b81601003610ec757507f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db61854919050565b81601103610ef657507f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea919050565b81601203610f2557507f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d919050565b81601303610f5457507f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc05919050565b81601403610f8357507f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d4919050565b81601503610fb257507f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b2967919050565b81601603610fe157507f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc3453919050565b8160170361101057507f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c48919050565b8160180361103f57507f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd1919050565b8160190361106e57507f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c919050565b81601a0361109d57507f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce99919050565b81601b036110cc57507f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f354919050565b81601c036110fa57507e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d919050565b81601d0361112957507f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f427919050565b81601e0361115857507f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb919050565b81601f0361118757507f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc919050565b60405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b60448201526064016104e6565b919050565b60026004540361121c5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016104e6565b6002600455565b341561128f5760405162461bcd60e51b815260206004820152603560248201527f4d6573736167652076616c756520697320737570706f73656420746f206265206044820152747a65726f20666f722045544820696e7374616e636560581b60648201526084016104e6565b80156112fa5760405162461bcd60e51b815260206004820152603460248201527f526566756e642076616c756520697320737570706f73656420746f206265207a60448201527365726f20666f722045544820696e7374616e636560601b60648201526084016104e6565b6000846001600160a01b03168360055461131491906119f5565b604051600081818185875af1925050503d8060008114611350576040519150601f19603f3d011682016040523d82523d6000602084013e611355565b606091505b50509050806113b45760405162461bcd60e51b815260206004820152602560248201527f7061796d656e7420746f205f726563697069656e7420646964206e6f7420676f604482015264207468727560d81b60648201526084016104e6565b8215611467576040516001600160a01b038516908490600081818185875af1925050503d8060008114611403576040519150601f19603f3d011682016040523d82523d6000602084013e611408565b606091505b505080915050806114675760405162461bcd60e51b815260206004820152602360248201527f7061796d656e7420746f205f72656c6179657220646964206e6f7420676f207460448201526268727560e81b60648201526084016104e6565b5050505050565b60035460008054909163ffffffff64010000000090910481169161149491166002611b1f565b63ffffffff168163ffffffff16036115075760405162461bcd60e51b815260206004820152603060248201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b60648201526084016104e6565b8083600080805b60005463ffffffff90811690821610156115d35761152d600286611b3c565b63ffffffff1660000361156b5783925061154c8163ffffffff16610ba7565b63ffffffff821660009081526001602052604090208590559150611587565b63ffffffff811660009081526001602052604090205492508391505b6115b27f00000000000000000000000000000000000000000000000000000000000000008484610827565b93506115bf600286611b5f565b9450806115cb81611b82565b91505061150e565b50600354600090601e906115ee9063ffffffff166001611ba5565b6115f89190611b3c565b6003805463ffffffff191663ffffffff83169081179091556000908152600260205260409020859055905061162e866001611ba5565b6003805463ffffffff929092166401000000000267ffffffff000000001990921691909117905550939695505050505050565b60055434146116d85760405162461bcd60e51b815260206004820152603860248201527f506c656173652073656e6420606d697844656e6f6d696e6174696f6e6020455460448201527f4820616c6f6e672077697468207472616e73616374696f6e000000000000000060648201526084016104e6565b565b6000602082840312156116ec57600080fd5b5035919050565b6001600160a01b0381168114610ba457600080fd5b80356111c5816116f3565b60008060008060008060008060e0898b03121561172f57600080fd5b883567ffffffffffffffff8082111561174757600080fd5b818b0191508b601f83011261175b57600080fd5b81358181111561176a57600080fd5b8c602082850101111561177c57600080fd5b60209283019a5098505089013595506040890135945061179e60608a01611708565b93506117ac60808a01611708565b925060a0890135915060c089013590509295985092959890939650565b6000806000606084860312156117de57600080fd5b83356117e9816116f3565b95602085013595506040909401359392505050565b6000806020838503121561181157600080fd5b823567ffffffffffffffff8082111561182957600080fd5b818501915085601f83011261183d57600080fd5b81358181111561184c57600080fd5b8660208260051b850101111561186157600080fd5b60209290920196919550909350505050565b6020808252825182820181905260009190848201906040850190845b818110156118ad57835115158352928401929184019160010161188f565b50909695505050505050565b60e081528260e08201526000610100848682850137600081868501015280601f19601f87011684010191505060208083018460005b600681101561190b578151835291830191908301906001016118ee565b50505050949350505050565b60006020828403121561192957600080fd5b8151801515811461193957600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b600063ffffffff82168061196c5761196c611940565b6000190192915050565b6000806040838503121561198957600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000600182016119ee576119ee611940565b5060010190565b81810381811115611a0857611a08611940565b92915050565b600181815b80851115611a4b578163ffffffff04821115611a3157611a31611940565b80851615611a3e57918102915b93841c9390800290611a13565b509250929050565b600082611a6257506001611a08565b81611a6f57506000611a08565b8160018114611a855760028114611a8f57611ac0565b6001915050611a08565b60ff841115611aa057611aa0611940565b6001841b915063ffffffff821115611aba57611aba611940565b50611a08565b5060208310610133831016604e8410600b8410161715611af7575081810a63ffffffff811115611af257611af2611940565b611a08565b611b018383611a0e565b8063ffffffff04821115611b1757611b17611940565b029392505050565b600063ffffffff611b34818516828516611a53565b949350505050565b600063ffffffff80841680611b5357611b5361199a565b92169190910692915050565b600063ffffffff80841680611b7657611b7661199a565b92169190910492915050565b600063ffffffff808316818103611b9b57611b9b611940565b6001019392505050565b63ffffffff818116838216019080821115610ab357610ab361194056fe30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a264697066735822122024959f2fd99ed61991321f936e2d8e08bd358b707de2ddf9ff3e1c55739c745164736f6c63430008130033";

type ETHTornadoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ETHTornadoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ETHTornado__factory extends ContractFactory {
  constructor(...args: ETHTornadoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ETHTornado";
  }

  override deploy(
    _verifier: PromiseOrValue<string>,
    _hasher: PromiseOrValue<string>,
    _denomination: PromiseOrValue<BigNumberish>,
    _merkleTreeHeight: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ETHTornado> {
    return super.deploy(
      _verifier,
      _hasher,
      _denomination,
      _merkleTreeHeight,
      overrides || {}
    ) as Promise<ETHTornado>;
  }
  override getDeployTransaction(
    _verifier: PromiseOrValue<string>,
    _hasher: PromiseOrValue<string>,
    _denomination: PromiseOrValue<BigNumberish>,
    _merkleTreeHeight: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _verifier,
      _hasher,
      _denomination,
      _merkleTreeHeight,
      overrides || {}
    );
  }
  override attach(address: string): ETHTornado {
    return super.attach(address) as ETHTornado;
  }
  override connect(signer: Signer): ETHTornado__factory {
    return super.connect(signer) as ETHTornado__factory;
  }
  static readonly contractName: "ETHTornado";

  public readonly contractName: "ETHTornado";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ETHTornadoInterface {
    return new utils.Interface(_abi) as ETHTornadoInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ETHTornado {
    return new Contract(address, _abi, signerOrProvider) as ETHTornado;
  }
}
