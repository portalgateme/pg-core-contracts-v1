/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC20Tornado,
  ERC20TornadoInterface,
} from "../../../contracts/tornado-core/ERC20Tornado";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVerifier",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "contract IHasher",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_denomination",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_merkleTreeHeight",
        type: "uint32",
      },
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "leafIndex",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "nullifierHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "relayer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [],
    name: "FIELD_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "commitments",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "denomination",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_commitment",
        type: "bytes32",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filledSubtrees",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract IHasher",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
    ],
    name: "isSpent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_nullifierHashes",
        type: "bytes32[]",
      },
    ],
    name: "isSpentArray",
    outputs: [
      {
        internalType: "bool[]",
        name: "spent",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_proof",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
      {
        internalType: "address payable",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_relayer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_refund",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c0604052600380546001600160401b03191690553480156200002157600080fd5b5060405162001d5838038062001d588339810160408190526200004491620003ac565b84848484808360008263ffffffff1611620000b65760405162461bcd60e51b815260206004820152602760248201527f5f747265654c6576656c732073686f756c642062652067726561746572207468604482015266616e207a65726f60c81b60648201526084015b60405180910390fd5b60208263ffffffff1610620001195760405162461bcd60e51b815260206004820152602260248201527f5f747265654c6576656c732073686f756c64206265206c657373207468616e20604482015261199960f11b6064820152608401620000ad565b63ffffffff8216608052600080546001600160a01b0319166001600160a01b0383161781556002805460018181019092557f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c60008051602062001d18833981519152909101819055815480830183559282905260008051602062001d388339815191529092018290555b8363ffffffff168163ffffffff1610156200021c57620001c4828062000305565b60028054600181810190925560008051602062001d18833981519152018290558054808201825560009190915260008051602062001d3883398151915201819055915080620002138162000428565b915050620001a3565b5060016200022b828062000305565b815460018181018455600093845260209093200155805463ffffffff85169081106200025b576200025b6200045a565b60009182526020909120015460045550506001600e555081620002cf5760405162461bcd60e51b815260206004820152602560248201527f64656e6f6d696e6174696f6e2073686f756c6420626520677265617465722074604482015264068616e20360dc1b6064820152608401620000ad565b506001600160a01b0392831660a052600f5550601280546001600160a01b0319169290911691909117905550620004bd92505050565b6000805460408051808201825285815260208101859052905163014cf2b360e51b81526001600160a01b039092169163299e566091620003489160040162000470565b602060405180830381865afa15801562000366573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200038c9190620004a3565b9392505050565b6001600160a01b0381168114620003a957600080fd5b50565b600080600080600060a08688031215620003c557600080fd5b8551620003d28162000393565b6020870151909550620003e58162000393565b60408701516060880151919550935063ffffffff811681146200040757600080fd5b60808701519092506200041a8162000393565b809150509295509295909350565b600063ffffffff8083168181036200045057634e487b7160e01b600052601160045260246000fd5b6001019392505050565b634e487b7160e01b600052603260045260246000fd5b60408101818360005b60028110156200049a57815183526020928301929091019060010162000479565b50505092915050565b600060208284031215620004b657600080fd5b5051919050565b60805160a051611820620004f8600039600081816101a601526105b601526000818161025401528181610ca50152610d7801526118206000f3fe6080604052600436106101355760003560e01c8063b214faa5116100ab578063e82955881161006f578063e8295588146103c8578063ec732959146103e8578063ed33639f1461041c578063f178e47c1461043c578063fc0c546a1461045c578063fc7e9c6f1461047c57600080fd5b8063b214faa51461033b578063ba70f7571461034e578063c2b40ae414610363578063cd87a3b414610383578063e5285dcc1461039857600080fd5b80634ecf518b116100fd5780634ecf518b146102425780636d9833e31461028b578063839df945146102ab5780638bca6d16146102db57806390eeb02b146102f15780639fa12d0b1461030e57600080fd5b806317cc915c1461013a57806321a0adb61461017f5780632b7ac3f31461019457806338bf282e146101e0578063414a37ba1461020e575b600080fd5b34801561014657600080fd5b5061016a610155366004611271565b60106020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b61019261018d3660046112a6565b6104a1565b005b3480156101a057600080fd5b506101c87f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610176565b3480156101ec57600080fd5b506102006101fb36600461135c565b6107ba565b604051908152602001610176565b34801561021a57600080fd5b506102007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181565b34801561024e57600080fd5b506102767f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff9091168152602001610176565b34801561029757600080fd5b5061016a6102a6366004611271565b610845565b3480156102b757600080fd5b5061016a6102c6366004611271565b60116020526000908152604090205460ff1681565b3480156102e757600080fd5b50610200600f5481565b3480156102fd57600080fd5b506003546102769063ffffffff1681565b34801561031a57600080fd5b5061032e61032936600461137e565b6108c7565b60405161017691906113f3565b610192610349366004611271565b61098d565b34801561035a57600080fd5b50610200610a7a565b34801561036f57600080fd5b5061020061037e366004611271565b610aa0565b34801561038f57600080fd5b50610276600a81565b3480156103a457600080fd5b5061016a6103b3366004611271565b60009081526010602052604090205460ff1690565b3480156103d457600080fd5b506102006103e3366004611271565b610ab7565b3480156103f457600080fd5b506102007f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b34801561042857600080fd5b506000546101c8906001600160a01b031681565b34801561044857600080fd5b50610200610457366004611271565b610ad8565b34801561046857600080fd5b506012546101c8906001600160a01b031681565b34801561048857600080fd5b5060035461027690640100000000900463ffffffff1681565b6104a9610ae8565b600f548211156105005760405162461bcd60e51b815260206004820152601a60248201527f4665652065786365656473207472616e736665722076616c756500000000000060448201526064015b60405180910390fd5b60008581526010602052604090205460ff161561055f5760405162461bcd60e51b815260206004820152601f60248201527f546865206e6f746520686173206265656e20616c7265616479207370656e740060448201526064016104f7565b61056886610845565b6105b45760405162461bcd60e51b815260206004820152601c60248201527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f740000000060448201526064016104f7565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663695ef6f989896040518060c001604052808b60001c81526020018a60001c81526020018960405160200161062b919060609190911b6bffffffffffffffffffffffff1916815260140190565b60408051601f1981840301815291815281516020928301208352516bffffffffffffffffffffffff1960608c901b16818301529101906034016040516020818303038152906040528051906020012060001c8152602001878152602001868152506040518463ffffffff1660e01b81526004016106aa93929190611439565b6020604051808303816000875af11580156106c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ed9190611497565b6107325760405162461bcd60e51b815260206004820152601660248201527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b60448201526064016104f7565b6000858152601060205260409020805460ff1916600117905561075784848484610b41565b604080516001600160a01b03868116825260208201889052918101849052908416907fe9e508bad6d4c3227e881ca19068f099da81b5164dd6d62b2eaf1e8bc6c349319060600160405180910390a26107b06001600e55565b5050505050505050565b6000805460408051808201825285815260208101859052905163014cf2b360e51b81526001600160a01b039092169163299e5660916107fb916004016114c0565b602060405180830381865afa158015610818573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083c91906114f1565b90505b92915050565b600081810361085657506000919050565b60035463ffffffff165b60048163ffffffff16600a81106108795761087961150a565b0154830361088a5750600192915050565b8063ffffffff1660000361089c5750600a5b806108a681611536565b60035490925063ffffffff9081169083160390506108605750600092915050565b60608167ffffffffffffffff8111156108e2576108e2611556565b60405190808252806020026020018201604052801561090b578160200160208202803683370190505b50905060005b828110156109865761094a84848381811061092e5761092e61150a565b9050602002013560009081526010602052604090205460ff1690565b156109745760018282815181106109635761096361150a565b911515602092830291909101909101525b8061097e8161156c565b915050610911565b5092915050565b610995610ae8565b60008181526011602052604090205460ff16156109fe5760405162461bcd60e51b815260206004820152602160248201527f54686520636f6d6d69746d656e7420686173206265656e207375626d697474656044820152601960fa1b60648201526084016104f7565b6000610a0982610c8c565b6000838152601160205260409020805460ff191660011790559050610a2c610ee4565b6040805163ffffffff8316815242602082015283917fa945e51eec50ab98c161376f0db4cf2aeba3ec92755fe2fcd388bdbbb80ff196910160405180910390a250610a776001600e55565b50565b60035460009060049063ffffffff16600a8110610a9957610a9961150a565b0154905090565b600481600a8110610ab057600080fd5b0154905081565b60028181548110610ac757600080fd5b600091825260209091200154905081565b60018181548110610ac757600080fd5b6002600e5403610b3a5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016104f7565b6002600e55565b803414610ba95760405162461bcd60e51b815260206004820152603060248201527f496e636f727265637420726566756e6420616d6f756e7420726563656976656460448201526f08189e481d1a194818dbdb9d1c9858dd60821b60648201526084016104f7565b610bce8483600f54610bbb9190611585565b6012546001600160a01b03169190610f6c565b8115610beb57601254610beb906001600160a01b03168484610f6c565b8015610c86576000846001600160a01b03168260405160006040518083038185875af1925050503d8060008114610c3e576040519150601f19603f3d011682016040523d82523d6000602084013e610c43565b606091505b5050905080610c84576040516001600160a01b0385169083156108fc029084906000818181858888f19350505050158015610c82573d6000803e3d6000fd5b505b505b50505050565b600354600090640100000000900463ffffffff16610ccb7f000000000000000000000000000000000000000000000000000000000000000060026116a9565b63ffffffff168163ffffffff1603610d3e5760405162461bcd60e51b815260206004820152603060248201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b60648201526084016104f7565b610d498160016116be565b6003805463ffffffff929092166401000000000267ffffffff000000001990921691909117905582600080805b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff161015610e6b57610db56002866116f1565b63ffffffff16600003610e165783925060028163ffffffff1681548110610dde57610dde61150a565b906000526020600020015491508360018263ffffffff1681548110610e0557610e0561150a565b600091825260209091200155610e40565b60018163ffffffff1681548110610e2f57610e2f61150a565b906000526020600020015492508391505b610e4a83836107ba565b9350610e57600286611714565b945080610e6381611737565b915050610d76565b50600354600a90610e839063ffffffff1660016116be565b610e8d91906116f1565b6003805463ffffffff191663ffffffff9290921691821790558390600490600a8110610ebb57610ebb61150a565b0155600354610eda90600190640100000000900463ffffffff1661175a565b9695505050505050565b3415610f4b5760405162461bcd60e51b815260206004820152603060248201527f4554482076616c756520697320737570706f73656420746f206265203020666f60448201526f7220455243323020696e7374616e636560801b60648201526084016104f7565b600f54601254610f6a916001600160a01b039091169033903090610fd4565b565b6040516001600160a01b038316602482015260448101829052610fcf90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261100c565b505050565b6040516001600160a01b0380851660248301528316604482015260648101829052610c869085906323b872dd60e01b90608401610f98565b6000611061826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166110e19092919063ffffffff16565b90508051600014806110825750808060200190518101906110829190611497565b610fcf5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016104f7565b60606110f084846000856110f8565b949350505050565b6060824710156111595760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016104f7565b600080866001600160a01b03168587604051611175919061179b565b60006040518083038185875af1925050503d80600081146111b2576040519150601f19603f3d011682016040523d82523d6000602084013e6111b7565b606091505b50915091506111c8878383876111d3565b979650505050505050565b6060831561124257825160000361123b576001600160a01b0385163b61123b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104f7565b50816110f0565b6110f083838151156112575781518083602001fd5b8060405162461bcd60e51b81526004016104f791906117b7565b60006020828403121561128357600080fd5b5035919050565b80356001600160a01b03811681146112a157600080fd5b919050565b60008060008060008060008060e0898b0312156112c257600080fd5b883567ffffffffffffffff808211156112da57600080fd5b818b0191508b601f8301126112ee57600080fd5b8135818111156112fd57600080fd5b8c602082850101111561130f57600080fd5b60209283019a5098505089013595506040890135945061133160608a0161128a565b935061133f60808a0161128a565b925060a0890135915060c089013590509295985092959890939650565b6000806040838503121561136f57600080fd5b50508035926020909101359150565b6000806020838503121561139157600080fd5b823567ffffffffffffffff808211156113a957600080fd5b818501915085601f8301126113bd57600080fd5b8135818111156113cc57600080fd5b8660208260051b85010111156113e157600080fd5b60209290920196919550909350505050565b6020808252825182820181905260009190848201906040850190845b8181101561142d57835115158352928401929184019160010161140f565b50909695505050505050565b60e081528260e08201526000610100848682850137600081868501015280601f19601f87011684010191505060208083018460005b600681101561148b5781518352918301919083019060010161146e565b50505050949350505050565b6000602082840312156114a957600080fd5b815180151581146114b957600080fd5b9392505050565b60408101818360005b60028110156114e85781518352602092830192909101906001016114c9565b50505092915050565b60006020828403121561150357600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600063ffffffff82168061154c5761154c611520565b6000190192915050565b634e487b7160e01b600052604160045260246000fd5b60006001820161157e5761157e611520565b5060010190565b8181038181111561083f5761083f611520565b600181815b808511156115d5578163ffffffff048211156115bb576115bb611520565b808516156115c857918102915b93841c939080029061159d565b509250929050565b6000826115ec5750600161083f565b816115f95750600061083f565b816001811461160f57600281146116195761164a565b600191505061083f565b60ff84111561162a5761162a611520565b6001841b915063ffffffff82111561164457611644611520565b5061083f565b5060208310610133831016604e8410600b8410161715611681575081810a63ffffffff81111561167c5761167c611520565b61083f565b61168b8383611598565b8063ffffffff048211156116a1576116a1611520565b029392505050565b600063ffffffff6110f08185168285166115dd565b63ffffffff81811683821601908082111561098657610986611520565b634e487b7160e01b600052601260045260246000fd5b600063ffffffff80841680611708576117086116db565b92169190910692915050565b600063ffffffff8084168061172b5761172b6116db565b92169190910492915050565b600063ffffffff80831681810361175057611750611520565b6001019392505050565b63ffffffff82811682821603908082111561098657610986611520565b60005b8381101561179257818101518382015260200161177a565b50506000910152565b600082516117ad818460208701611777565b9190910192915050565b60208152600082518060208401526117d6816040850160208701611777565b601f01601f1916919091016040019291505056fea2646970667358221220741ede90d320d48c696a6845021991ef42c1f0b5cf2984430ab3f99a22de285b64736f6c63430008130033405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5aceb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6";

type ERC20TornadoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20TornadoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Tornado__factory extends ContractFactory {
  constructor(...args: ERC20TornadoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ERC20Tornado";
  }

  override deploy(
    _verifier: PromiseOrValue<string>,
    _hasher: PromiseOrValue<string>,
    _denomination: PromiseOrValue<BigNumberish>,
    _merkleTreeHeight: PromiseOrValue<BigNumberish>,
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20Tornado> {
    return super.deploy(
      _verifier,
      _hasher,
      _denomination,
      _merkleTreeHeight,
      _token,
      overrides || {}
    ) as Promise<ERC20Tornado>;
  }
  override getDeployTransaction(
    _verifier: PromiseOrValue<string>,
    _hasher: PromiseOrValue<string>,
    _denomination: PromiseOrValue<BigNumberish>,
    _merkleTreeHeight: PromiseOrValue<BigNumberish>,
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _verifier,
      _hasher,
      _denomination,
      _merkleTreeHeight,
      _token,
      overrides || {}
    );
  }
  override attach(address: string): ERC20Tornado {
    return super.attach(address) as ERC20Tornado;
  }
  override connect(signer: Signer): ERC20Tornado__factory {
    return super.connect(signer) as ERC20Tornado__factory;
  }
  static readonly contractName: "ERC20Tornado";

  public readonly contractName: "ERC20Tornado";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20TornadoInterface {
    return new utils.Interface(_abi) as ERC20TornadoInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Tornado {
    return new Contract(address, _abi, signerOrProvider) as ERC20Tornado;
  }
}
