/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  RelayerAggregator,
  RelayerAggregatorInterface,
} from "../../../contracts/portalgate/RelayerAggregator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_relayerRegistry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "relayerRegistry",
    outputs: [
      {
        internalType: "contract IRelayerRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_relayers",
        type: "address[]",
      },
    ],
    name: "relayersData",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isRegistered",
            type: "bool",
          },
        ],
        internalType: "struct Relayer[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161047238038061047283398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6103df806100936000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806347ff589d1461003b578063575a3ab01461006b575b600080fd5b60005461004e906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61007e61007936600461022d565b61008b565b60405161006291906102f2565b60606000825167ffffffffffffffff8111156100a9576100a96101fb565b6040519080825280602002602001820160405280156100ee57816020015b60408051808201909152600080825260208201528152602001906001900390816100c75790505b50905060005b83518110156101f45760005484516001600160a01b039091169063fb04c9399086908490811061012657610126610343565b60200260200101516040518263ffffffff1660e01b815260040161015991906001600160a01b0391909116815260200190565b602060405180830381865afa158015610176573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019a9190610359565b8282815181106101ac576101ac610343565b6020026020010151602001901515908115158152505060008282815181106101d6576101d6610343565b602090810291909101015152806101ec81610382565b9150506100f4565b5092915050565b634e487b7160e01b600052604160045260246000fd5b80356001600160a01b038116811461022857600080fd5b919050565b6000602080838503121561024057600080fd5b823567ffffffffffffffff8082111561025857600080fd5b818501915085601f83011261026c57600080fd5b81358181111561027e5761027e6101fb565b8060051b604051601f19603f830116810181811085821117156102a3576102a36101fb565b6040529182528482019250838101850191888311156102c157600080fd5b938501935b828510156102e6576102d785610211565b845293850193928501926102c6565b98975050505050505050565b602080825282518282018190526000919060409081850190868401855b8281101561033657815180518552860151151586850152928401929085019060010161030f565b5091979650505050505050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561036b57600080fd5b8151801515811461037b57600080fd5b9392505050565b6000600182016103a257634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220114b9c49bd43e1e47619d5af81275e5b3826bfa7939238eac5c5a409b52dd5e564736f6c63430008130033";

type RelayerAggregatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RelayerAggregatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RelayerAggregator__factory extends ContractFactory {
  constructor(...args: RelayerAggregatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RelayerAggregator";
  }

  override deploy(
    _relayerRegistry: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RelayerAggregator> {
    return super.deploy(
      _relayerRegistry,
      overrides || {}
    ) as Promise<RelayerAggregator>;
  }
  override getDeployTransaction(
    _relayerRegistry: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_relayerRegistry, overrides || {});
  }
  override attach(address: string): RelayerAggregator {
    return super.attach(address) as RelayerAggregator;
  }
  override connect(signer: Signer): RelayerAggregator__factory {
    return super.connect(signer) as RelayerAggregator__factory;
  }
  static readonly contractName: "RelayerAggregator";

  public readonly contractName: "RelayerAggregator";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RelayerAggregatorInterface {
    return new utils.Interface(_abi) as RelayerAggregatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RelayerAggregator {
    return new Contract(address, _abi, signerOrProvider) as RelayerAggregator;
  }
}
