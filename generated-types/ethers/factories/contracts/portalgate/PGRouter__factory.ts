/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  PGRouter,
  PGRouterInterface,
} from "../../../contracts/portalgate/PGRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_governance",
        type: "address",
      },
      {
        internalType: "address",
        name: "_instanceRegistry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_relayerRegistry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encryptedNote",
        type: "bytes",
      },
    ],
    name: "EncryptedNote",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "approveExactToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "_encryptedNotes",
        type: "bytes[]",
      },
    ],
    name: "backupNotes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ITornadoInstance",
        name: "_tornado",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_commitment",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_encryptedNote",
        type: "bytes",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "governance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "instanceRegistry",
    outputs: [
      {
        internalType: "contract InstanceRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "relayerRegistry",
    outputs: [
      {
        internalType: "contract RelayerRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "rescueTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ITornadoInstance",
        name: "_tornado",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_proof",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
      {
        internalType: "address payable",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_relayer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_refund",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e060405234801561001057600080fd5b5060405162001442380380620014428339810160408190526100319161006a565b6001600160a01b0392831660805290821660a0521660c0526100ad565b80516001600160a01b038116811461006557600080fd5b919050565b60008060006060848603121561007f57600080fd5b6100888461004e565b92506100966020850161004e565b91506100a46040850161004e565b90509250925092565b60805160a05160c05161133c620001066000396000818161011701528181610699015261072001526000818160a7015281816101ec01528181610401015261051301526000818161014b0152610856015261133c6000f3fe60806040526004361061007b5760003560e01c80635aa6e6751161004e5780635aa6e675146101395780636485ba2a1461016d578063b438689f1461018d578063cea9d26f146101a057600080fd5b806313d98d131461008057806336a3874b146100955780633ef10783146100e557806347ff589d14610105575b600080fd5b61009361008e366004610edd565b6101c0565b005b3480156100a157600080fd5b506100c97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b3480156100f157600080fd5b50610093610100366004610f39565b6103f6565b34801561011157600080fd5b506100c97f000000000000000000000000000000000000000000000000000000000000000081565b34801561014557600080fd5b506100c97f000000000000000000000000000000000000000000000000000000000000000081565b34801561017957600080fd5b50610093610188366004610f7a565b610478565b61009361019b366004610fef565b6104f1565b3480156101ac57600080fd5b506100936101bb366004610f39565b61084b565b60405163032bb44360e01b81526001600160a01b038581166004830152600091829182918291829182917f0000000000000000000000000000000000000000000000000000000000000000169063032bb4439060240160c060405180830381865afa158015610233573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025791906110a7565b949a50929850909650945092509050600084600381111561027a5761027a611136565b036102cc5760405162461bcd60e51b815260206004820152601d60248201527f54686520696e7374616e6365206973206e6f7420737570706f7274656400000060448201526064015b60405180910390fd5b851561034b5761034b33308c6001600160a01b0316638bca6d166040518163ffffffff1660e01b8152600401602060405180830381865afa158015610315573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610339919061114c565b6001600160a01b038916929190610a4c565b60405163b214faa560e01b8152600481018a90526001600160a01b038b169063b214faa59034906024016000604051808303818588803b15801561038e57600080fd5b505af11580156103a2573d6000803e3d6000fd5b5050505050336001600160a01b03167ffa28df43db3553771f7209dcef046f3bdfea15870ab625dcda30ac58b82b400889896040516103e292919061118e565b60405180910390a250505050505050505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461045f5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064016102c3565b6104736001600160a01b0384168383610abd565b505050565b60005b8181101561047357337ffa28df43db3553771f7209dcef046f3bdfea15870ab625dcda30ac58b82b40088484848181106104b7576104b76111a2565b90506020028101906104c991906111b8565b6040516104d792919061118e565b60405180910390a2806104e9816111ff565b91505061047b565b60405163032bb44360e01b81526001600160a01b038a811660048301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063032bb4439060240160c060405180830381865afa15801561055c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058091906110a7565b509194506000935061059192505050565b8160038111156105a3576105a3611136565b036105f05760405162461bcd60e51b815260206004820152601d60248201527f54686520696e7374616e6365206973206e6f7420737570706f7274656400000060448201526064016102c3565b600381600381111561060457610604611136565b036106615760405162461bcd60e51b815260206004820152602760248201527f54686520696e7374616e6365206973206e6f7420616c6c6f77656420746f20776044820152666974686472617760c81b60648201526084016102c3565b846001600160a01b0316846001600160a01b0316146107d15760405163fb04c93960e01b81526001600160a01b0385811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063fb04c93990602401602060405180830381865afa1580156106e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107049190611226565b8015610793575060405163fb04c93960e01b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063fb04c93990602401602060405180830381865afa15801561076f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107939190611226565b6107d15760405162461bcd60e51b815260206004820152600f60248201526e24b73b30b634b2102932b630bcb2b960891b60448201526064016102c3565b6040516310d056db60e11b81526001600160a01b038b16906321a0adb690349061080d908d908d908d908d908d908d908d908d90600401611241565b6000604051808303818588803b15801561082657600080fd5b505af115801561083a573d6000803e3d6000fd5b505050505050505050505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108b45760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064016102c3565b6001600160a01b03821661090a5760405162461bcd60e51b815260206004820181905260248201527f50473a2063616e206e6f742073656e6420746f207a65726f206164647265737360448201526064016102c3565b6001600160a01b038316610966574760006109258284610bd2565b6040519091506001600160a01b0385169082156108fc029083906000818181858888f1935050505015801561095e573d6000803e3d6000fd5b505050505050565b6040516370a0823160e01b81523060048201526000906001600160a01b038516906370a0823190602401602060405180830381865afa1580156109ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d1919061114c565b905060006109df8284610bd2565b905060008111610a315760405162461bcd60e51b815260206004820152601c60248201527f50473a20747279696e6720746f2073656e6420302062616c616e63650000000060448201526064016102c3565b610a456001600160a01b0386168583610bea565b5050505050565b6040516001600160a01b0380851660248301528316604482015260648101829052610ab79085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610c1a565b50505050565b801580610b375750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015610b11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b35919061114c565b155b610ba25760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084016102c3565b6040516001600160a01b03831660248201526044810182905261047390849063095ea7b360e01b90606401610a80565b6000818310610be15781610be3565b825b9392505050565b6040516001600160a01b03831660248201526044810182905261047390849063a9059cbb60e01b90606401610a80565b6000610c6f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610cec9092919063ffffffff16565b8051909150156104735780806020019051810190610c8d9190611226565b6104735760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016102c3565b6060610cfb8484600085610d03565b949350505050565b606082471015610d645760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016102c3565b600080866001600160a01b03168587604051610d8091906112b7565b60006040518083038185875af1925050503d8060008114610dbd576040519150601f19603f3d011682016040523d82523d6000602084013e610dc2565b606091505b5091509150610dd387838387610dde565b979650505050505050565b60608315610e4d578251600003610e46576001600160a01b0385163b610e465760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102c3565b5081610cfb565b610cfb8383815115610e625781518083602001fd5b8060405162461bcd60e51b81526004016102c391906112d3565b6001600160a01b0381168114610e9157600080fd5b50565b60008083601f840112610ea657600080fd5b50813567ffffffffffffffff811115610ebe57600080fd5b602083019150836020828501011115610ed657600080fd5b9250929050565b60008060008060608587031215610ef357600080fd5b8435610efe81610e7c565b935060208501359250604085013567ffffffffffffffff811115610f2157600080fd5b610f2d87828801610e94565b95989497509550505050565b600080600060608486031215610f4e57600080fd5b8335610f5981610e7c565b92506020840135610f6981610e7c565b929592945050506040919091013590565b60008060208385031215610f8d57600080fd5b823567ffffffffffffffff80821115610fa557600080fd5b818501915085601f830112610fb957600080fd5b813581811115610fc857600080fd5b8660208260051b8501011115610fdd57600080fd5b60209290920196919550909350505050565b60008060008060008060008060006101008a8c03121561100e57600080fd5b893561101981610e7c565b985060208a013567ffffffffffffffff81111561103557600080fd5b6110418c828d01610e94565b90995097505060408a0135955060608a0135945060808a013561106381610e7c565b935060a08a013561107381610e7c565b8093505060c08a0135915060e08a013590509295985092959850929598565b805180151581146110a257600080fd5b919050565b60008060008060008060c087890312156110c057600080fd5b6110c987611092565b955060208701516110d981610e7c565b6040880151909550600481106110ee57600080fd5b606088015190945062ffffff8116811461110757600080fd5b608088015190935063ffffffff8116811461112157600080fd5b8092505060a087015190509295509295509295565b634e487b7160e01b600052602160045260246000fd5b60006020828403121561115e57600080fd5b5051919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b602081526000610cfb602083018486611165565b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126111cf57600080fd5b83018035915067ffffffffffffffff8211156111ea57600080fd5b602001915036819003821315610ed657600080fd5b60006001820161121f57634e487b7160e01b600052601160045260246000fd5b5060010190565b60006020828403121561123857600080fd5b610be382611092565b60e08152600061125560e083018a8c611165565b60208301989098525060408101959095526001600160a01b03938416606086015291909216608084015260a083019190915260c09091015292915050565b60005b838110156112ae578181015183820152602001611296565b50506000910152565b600082516112c9818460208701611293565b9190910192915050565b60208152600082518060208401526112f2816040850160208701611293565b601f01601f1916919091016040019291505056fea264697066735822122012c460d9e578504992b8c89145b76a4019558de885e41232ef1e342424254b3b64736f6c63430008130033";

type PGRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PGRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PGRouter__factory extends ContractFactory {
  constructor(...args: PGRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "PGRouter";
  }

  override deploy(
    _governance: PromiseOrValue<string>,
    _instanceRegistry: PromiseOrValue<string>,
    _relayerRegistry: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PGRouter> {
    return super.deploy(
      _governance,
      _instanceRegistry,
      _relayerRegistry,
      overrides || {}
    ) as Promise<PGRouter>;
  }
  override getDeployTransaction(
    _governance: PromiseOrValue<string>,
    _instanceRegistry: PromiseOrValue<string>,
    _relayerRegistry: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _governance,
      _instanceRegistry,
      _relayerRegistry,
      overrides || {}
    );
  }
  override attach(address: string): PGRouter {
    return super.attach(address) as PGRouter;
  }
  override connect(signer: Signer): PGRouter__factory {
    return super.connect(signer) as PGRouter__factory;
  }
  static readonly contractName: "PGRouter";

  public readonly contractName: "PGRouter";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PGRouterInterface {
    return new utils.Interface(_abi) as PGRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PGRouter {
    return new Contract(address, _abi, signerOrProvider) as PGRouter;
  }
}
