/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IPolicyManager,
  IPolicyManagerInterface,
} from "../../../../contracts/keyring/interfaces/IPolicyManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "Unacceptable",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "policyId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "attestors",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "AddPolicyAttestors",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "policyId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "walletChecks",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "AddPolicyWalletChecks",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "attestor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "AdmitAttestor",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "walletCheck",
        type: "address",
      },
    ],
    name: "AdmitWalletCheck",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "policyId",
        type: "uint32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "ruleId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "descriptionUtf8",
            type: "string",
          },
          {
            internalType: "uint32",
            name: "ttl",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "gracePeriod",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "acceptRoots",
            type: "uint16",
          },
          {
            internalType: "bool",
            name: "allowUserWhitelists",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "locked",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct PolicyStorage.PolicyScalar",
        name: "policyScalar",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "attestors",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "walletChecks",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "policyOwnerRole",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "policyUserAdminRole",
        type: "bytes32",
      },
    ],
    name: "CreatePolicy",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "deployer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "trustedForwarder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "ruleRegistry",
        type: "address",
      },
    ],
    name: "PolicyManagerDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "PolicyManagerInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "attestor",
        type: "address",
      },
    ],
    name: "RemoveAttestor",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "policyId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "attestor",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "RemovePolicyAttestors",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "policyId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "walletChecks",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "RemovePolicyWalletChecks",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "walletCheck",
        type: "address",
      },
    ],
    name: "RemoveWalletCheck",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "attestor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "UpdateAttestorUri",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "policyId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "acceptRoots",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "UpdatePolicyAcceptRoots",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "policyId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "allowUserWhitelists",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "UpdatePolicyAllowUserWhitelists",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "policyId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "UpdatePolicyDeadline",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "policyId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "UpdatePolicyDescription",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "policyId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "gracePeriod",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "UpdatePolicyGracePeriod",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "policyId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "locked",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "UpdatePolicyLock",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "policyId",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "ruleId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "UpdatePolicyRuleId",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "policyId",
        type: "uint32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "ruleId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "descriptionUtf8",
            type: "string",
          },
          {
            internalType: "uint32",
            name: "ttl",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "gracePeriod",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "acceptRoots",
            type: "uint16",
          },
          {
            internalType: "bool",
            name: "allowUserWhitelists",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "locked",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct PolicyStorage.PolicyScalar",
        name: "policyScalar",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "UpdatePolicyScalar",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "policyId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "ttl",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "UpdatePolicyTtl",
    type: "event",
  },
  {
    inputs: [],
    name: "ROLE_GLOBAL_ATTESTOR_ADMIN",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROLE_GLOBAL_WALLETCHECK_ADMIN",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROLE_POLICY_CREATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "policyId",
        type: "uint32",
      },
      {
        internalType: "address[]",
        name: "attestors",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "addPolicyAttestors",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "policyId",
        type: "uint32",
      },
      {
        internalType: "address[]",
        name: "walletChecks",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "addPolicyWalletChecks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "attestor",
        type: "address",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "admitAttestor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "walletCheck",
        type: "address",
      },
    ],
    name: "admitWalletCheck",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "attestor",
        type: "address",
      },
    ],
    name: "attestorUri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "ruleId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "descriptionUtf8",
            type: "string",
          },
          {
            internalType: "uint32",
            name: "ttl",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "gracePeriod",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "acceptRoots",
            type: "uint16",
          },
          {
            internalType: "bool",
            name: "allowUserWhitelists",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "locked",
            type: "bool",
          },
        ],
        internalType: "struct PolicyStorage.PolicyScalar",
        name: "policyScalar",
        type: "tuple",
      },
      {
        internalType: "address[]",
        name: "attestors",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "walletChecks",
        type: "address[]",
      },
    ],
    name: "createPolicy",
    outputs: [
      {
        internalType: "uint32",
        name: "policyId",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "policyOwnerRoleId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "policyUserAdminRoleId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "globalAttestorAtIndex",
    outputs: [
      {
        internalType: "address",
        name: "attestor",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "globalAttestorCount",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "globalWalletCheckAtIndex",
    outputs: [
      {
        internalType: "address",
        name: "walletCheck",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "globalWalletCheckCount",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "attestor",
        type: "address",
      },
    ],
    name: "isGlobalAttestor",
    outputs: [
      {
        internalType: "bool",
        name: "isIndeed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "walletCheck",
        type: "address",
      },
    ],
    name: "isGlobalWalletCheck",
    outputs: [
      {
        internalType: "bool",
        name: "isIndeed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "policyId",
        type: "uint32",
      },
    ],
    name: "isPolicy",
    outputs: [
      {
        internalType: "bool",
        name: "isIndeed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "policyId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "attestor",
        type: "address",
      },
    ],
    name: "isPolicyAttestor",
    outputs: [
      {
        internalType: "bool",
        name: "isIndeed",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "policyId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "walletCheck",
        type: "address",
      },
    ],
    name: "isPolicyWalletCheck",
    outputs: [
      {
        internalType: "bool",
        name: "isIndeed",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "policyId",
        type: "uint32",
      },
    ],
    name: "policy",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "ruleId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "descriptionUtf8",
            type: "string",
          },
          {
            internalType: "uint32",
            name: "ttl",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "gracePeriod",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "acceptRoots",
            type: "uint16",
          },
          {
            internalType: "bool",
            name: "allowUserWhitelists",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "locked",
            type: "bool",
          },
        ],
        internalType: "struct PolicyStorage.PolicyScalar",
        name: "scalar",
        type: "tuple",
      },
      {
        internalType: "address[]",
        name: "attestors",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "walletChecks",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "policyId",
        type: "uint32",
      },
    ],
    name: "policyAcceptRoots",
    outputs: [
      {
        internalType: "uint16",
        name: "acceptRoots",
        type: "uint16",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "policyId",
        type: "uint32",
      },
    ],
    name: "policyAllowUserWhitelists",
    outputs: [
      {
        internalType: "bool",
        name: "isAllowed",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "policyId",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "policyAttestorAtIndex",
    outputs: [
      {
        internalType: "address",
        name: "attestor",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "policyId",
        type: "uint32",
      },
    ],
    name: "policyAttestorCount",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "policyId",
        type: "uint32",
      },
    ],
    name: "policyAttestors",
    outputs: [
      {
        internalType: "address[]",
        name: "attestors",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "policyCount",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "policyId",
        type: "uint32",
      },
    ],
    name: "policyDeadline",
    outputs: [
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "policyId",
        type: "uint32",
      },
    ],
    name: "policyDescription",
    outputs: [
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "policyId",
        type: "uint32",
      },
    ],
    name: "policyGracePeriod",
    outputs: [
      {
        internalType: "uint128",
        name: "gracePeriod",
        type: "uint128",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "policyId",
        type: "uint32",
      },
    ],
    name: "policyLocked",
    outputs: [
      {
        internalType: "bool",
        name: "isLocked",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "policyId",
        type: "uint32",
      },
    ],
    name: "policyOwnerRole",
    outputs: [
      {
        internalType: "bytes32",
        name: "ownerRole",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "policyId",
        type: "uint32",
      },
    ],
    name: "policyRawData",
    outputs: [
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "ruleId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "descriptionUtf8",
            type: "string",
          },
          {
            internalType: "uint32",
            name: "ttl",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "gracePeriod",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "acceptRoots",
            type: "uint16",
          },
          {
            internalType: "bool",
            name: "allowUserWhitelists",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "locked",
            type: "bool",
          },
        ],
        internalType: "struct PolicyStorage.PolicyScalar",
        name: "scalarActive",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "ruleId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "descriptionUtf8",
            type: "string",
          },
          {
            internalType: "uint32",
            name: "ttl",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "gracePeriod",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "acceptRoots",
            type: "uint16",
          },
          {
            internalType: "bool",
            name: "allowUserWhitelists",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "locked",
            type: "bool",
          },
        ],
        internalType: "struct PolicyStorage.PolicyScalar",
        name: "scalarPending",
        type: "tuple",
      },
      {
        internalType: "address[]",
        name: "attestorsActive",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "attestorsPendingAdditions",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "attestorsPendingRemovals",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "walletChecksActive",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "walletChecksPendingAdditions",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "walletChecksPendingRemovals",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "policyId",
        type: "uint32",
      },
    ],
    name: "policyRuleId",
    outputs: [
      {
        internalType: "bytes32",
        name: "ruleId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "policyId",
        type: "uint32",
      },
    ],
    name: "policyTtl",
    outputs: [
      {
        internalType: "uint128",
        name: "ttl",
        type: "uint128",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "policyId",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "policyWalletCheckAtIndex",
    outputs: [
      {
        internalType: "address",
        name: "walletCheck",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "policyId",
        type: "uint32",
      },
    ],
    name: "policyWalletCheckCount",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "policyId",
        type: "uint32",
      },
    ],
    name: "policyWalletChecks",
    outputs: [
      {
        internalType: "address[]",
        name: "walletChecks",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "attestor",
        type: "address",
      },
    ],
    name: "removeAttestor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "policyId",
        type: "uint32",
      },
      {
        internalType: "address[]",
        name: "attestors",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "removePolicyAttestors",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "policyId",
        type: "uint32",
      },
      {
        internalType: "address[]",
        name: "walletChecks",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "removePolicyWalletChecks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "walletCheck",
        type: "address",
      },
    ],
    name: "removeWalletCheck",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ruleRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "policyId",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "setDeadline",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "attestor",
        type: "address",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "updateAttestorUri",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "policyId",
        type: "uint32",
      },
      {
        internalType: "uint16",
        name: "acceptRoots",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "updatePolicyAcceptRoots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "policyId",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "allowUserWhitelists",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "updatePolicyAllowUserWhitelists",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "policyId",
        type: "uint32",
      },
      {
        internalType: "string",
        name: "descriptionUtf8",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "updatePolicyDescription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "policyId",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "gracePeriod",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "updatePolicyGracePeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "policyId",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "locked",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "updatePolicyLock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "policyId",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "ruleId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "updatePolicyRuleId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "policyId",
        type: "uint32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "ruleId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "descriptionUtf8",
            type: "string",
          },
          {
            internalType: "uint32",
            name: "ttl",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "gracePeriod",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "acceptRoots",
            type: "uint16",
          },
          {
            internalType: "bool",
            name: "allowUserWhitelists",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "locked",
            type: "bool",
          },
        ],
        internalType: "struct PolicyStorage.PolicyScalar",
        name: "policyScalar",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "updatePolicyScalar",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "policyId",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "ttl",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "updatePolicyTtl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IPolicyManager__factory {
  static readonly abi = _abi;
  static createInterface(): IPolicyManagerInterface {
    return new utils.Interface(_abi) as IPolicyManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IPolicyManager {
    return new Contract(address, _abi, signerOrProvider) as IPolicyManager;
  }
}
