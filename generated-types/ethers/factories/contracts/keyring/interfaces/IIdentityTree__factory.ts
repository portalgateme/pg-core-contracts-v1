/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IIdentityTree,
  IIdentityTreeInterface,
} from "../../../../contracts/keyring/interfaces/IIdentityTree";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "Unacceptable",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "birthday",
        type: "uint256",
      },
    ],
    name: "SetMerkleRootBirthday",
    type: "event",
  },
  {
    inputs: [],
    name: "ROLE_AGGREGATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "isMerkleRoot",
    outputs: [
      {
        internalType: "bool",
        name: "isIndeed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestBirthday",
    outputs: [
      {
        internalType: "uint256",
        name: "birthday",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "merkleRootAtIndex",
    outputs: [
      {
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "merkleRootBirthday",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRootCount",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "merkleRootSuccessors",
    outputs: [
      {
        internalType: "uint256",
        name: "successors",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "birthday",
        type: "uint256",
      },
    ],
    name: "setMerkleRootBirthday",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IIdentityTree__factory {
  static readonly abi = _abi;
  static createInterface(): IIdentityTreeInterface {
    return new utils.Interface(_abi) as IIdentityTreeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IIdentityTree {
    return new Contract(address, _abi, signerOrProvider) as IIdentityTree;
  }
}
