/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  NoImplementation,
  NoImplementationInterface,
} from "../../../../contracts/keyring/forwarder/NoImplementation";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "NotImplemented",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct NoImplementation.ForwardRequest",
        name: "",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct NoImplementation.ForwardRequest",
        name: "",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061028b806100206000396000f3fe6080604052600436106100345760003560e01c80632d0335ab1461003957806347153f821461006d578063bf5d3bdb1461008e575b600080fd5b34801561004557600080fd5b5061005a610054366004610127565b50600090565b6040519081526020015b60405180910390f35b61008061007b366004610157565b6100c2565b6040516100649291906101f6565b34801561009a57600080fd5b506100b26100a9366004610157565b60009392505050565b6040519015158152602001610064565b604080516370485f1160e01b81523360048201526024810191909152602160448201527f5468697320666f72776172646572206973206e6f74206f7065726174696f6e616064820152601b60fa1b608482015260009060609060a40160405180910390fd5b60006020828403121561013957600080fd5b81356001600160a01b038116811461015057600080fd5b9392505050565b60008060006040848603121561016c57600080fd5b833567ffffffffffffffff8082111561018457600080fd5b9085019060c0828803121561019857600080fd5b909350602085013590808211156101ae57600080fd5b818601915086601f8301126101c257600080fd5b8135818111156101d157600080fd5b8760208285010111156101e357600080fd5b6020830194508093505050509250925092565b821515815260006020604081840152835180604085015260005b8181101561022c57858101830151858201606001528201610210565b8181111561023e576000606083870101525b50601f01601f19169290920160600194935050505056fea2646970667358221220a621ea2988383d9be6435cce81f022d83670be2be98ab882ea476e59c74a73fa64736f6c634300080e0033";

type NoImplementationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NoImplementationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NoImplementation__factory extends ContractFactory {
  constructor(...args: NoImplementationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "NoImplementation";
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NoImplementation> {
    return super.deploy(overrides || {}) as Promise<NoImplementation>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NoImplementation {
    return super.attach(address) as NoImplementation;
  }
  override connect(signer: Signer): NoImplementation__factory {
    return super.connect(signer) as NoImplementation__factory;
  }
  static readonly contractName: "NoImplementation";

  public readonly contractName: "NoImplementation";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NoImplementationInterface {
    return new utils.Interface(_abi) as NoImplementationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NoImplementation {
    return new Contract(address, _abi, signerOrProvider) as NoImplementation;
  }
}
