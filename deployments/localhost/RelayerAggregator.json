{
  "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_relayerRegistry",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "relayerRegistry",
      "outputs": [
        {
          "internalType": "contract IRelayerRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_relayers",
          "type": "address[]"
        }
      ],
      "name": "relayersData",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isRegistered",
              "type": "bool"
            }
          ],
          "internalType": "struct Relayer[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x99e0b2ef1be134876402e070e80326d3d99373ecc846bcf7fef4414487b09cc6",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
    "transactionIndex": 0,
    "gasUsed": "291741",
    "logsBloom": "0x
    "blockHash": "0xfe21ec0822b64a492a02eab6c1f7bc9c80ec0a62020c721c7f5d1337536d375c",
    "transactionHash": "0x99e0b2ef1be134876402e070e80326d3d99373ecc846bcf7fef4414487b09cc6",
    "logs": [],
    "blockNumber": 8,
    "cumulativeGasUsed": "291741",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x0165878A594ca255338adfa4d48449f69242Eb8F"
  ],
  "numDeployments": 1,
  "solcInputHash": "b05f685ab6480796cc26619a5c49cdb8",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_relayerRegistry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"relayerRegistry\",\"outputs\":[{\"internalType\":\"contract IRelayerRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_relayers\",\"type\":\"address[]\"}],\"name\":\"relayersData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isRegistered\",\"type\":\"bool\"}],\"internalType\":\"struct Relayer[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/portalgate/RelayerAggregator.sol\":\"RelayerAggregator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ENSRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface ENSRegistry {\\n    // Logged when the owner of a node assigns a new owner to a subnode.\\n    event NewOwner(bytes32 indexed node, bytes32 indexed label, address owner);\\n\\n    // Logged when the owner of a node transfers ownership to a new account.\\n    event Transfer(bytes32 indexed node, address owner);\\n\\n    // Logged when the resolver for a node changes.\\n    event NewResolver(bytes32 indexed node, address resolver);\\n\\n    // Logged when the TTL of a node changes\\n    event NewTTL(bytes32 indexed node, uint64 ttl);\\n\\n    // Logged when an operator is added or removed.\\n    event ApprovalForAll(\\n        address indexed owner,\\n        address indexed operator,\\n        bool approved\\n    );\\n\\n    function setRecord(\\n        bytes32 node,\\n        address owner,\\n        address resolver,\\n        uint64 ttl\\n    ) external;\\n\\n    function setSubnodeRecord(\\n        bytes32 node,\\n        bytes32 label,\\n        address owner,\\n        address resolver,\\n        uint64 ttl\\n    ) external;\\n\\n    function setSubnodeOwner(\\n        bytes32 node,\\n        bytes32 label,\\n        address owner\\n    ) external returns (bytes32);\\n\\n    function setResolver(bytes32 node, address resolver) external;\\n\\n    function setOwner(bytes32 node, address owner) external;\\n\\n    function setTTL(bytes32 node, uint64 ttl) external;\\n\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    function owner(bytes32 node) external view returns (address);\\n\\n    function resolver(bytes32 node) external view returns (address);\\n\\n    function ttl(bytes32 node) external view returns (uint64);\\n\\n    function recordExists(bytes32 node) external view returns (bool);\\n\\n    function isApprovedForAll(\\n        address owner,\\n        address operator\\n    ) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xbab294c1e7d5bfedb37042de88825a01efa84d2827e88af0c78b3e8c1a803ad7\",\"license\":\"MIT\"},\"contracts/interfaces/ENSResolver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface ENSResolver {\\n    function addr(bytes32 node) external view returns (address);\\n\\n    function text(\\n        bytes32 node,\\n        string calldata key\\n    ) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x00b511cf7834f23f0fa9c4c933a189af76407927debb0382cea78c526f754881\",\"license\":\"MIT\"},\"contracts/interfaces/IRelayerRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IRelayerRegistry {\\n    function getRelayerBalance(address relayer) external view returns (uint256);\\n\\n    function isRelayerRegistered(address relayer) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x30d2ec458cfc99c08ce0125bb903ba791c6001572dbab325e1273fefa0c96c76\",\"license\":\"MIT\"},\"contracts/portalgate/RelayerAggregator.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../interfaces/ENSRegistry.sol\\\";\\nimport \\\"../interfaces/ENSResolver.sol\\\";\\nimport \\\"../interfaces/IRelayerRegistry.sol\\\";\\n\\nstruct Relayer {\\n    uint256 balance;\\n    bool isRegistered;\\n}\\n\\ncontract RelayerAggregator {\\n    IRelayerRegistry public relayerRegistry;\\n\\n    constructor(address _relayerRegistry) {\\n        relayerRegistry = IRelayerRegistry(_relayerRegistry);\\n    }\\n\\n    function relayersData(\\n        address[] memory _relayers\\n    ) public view returns (Relayer[] memory) {\\n        Relayer[] memory relayers = new Relayer[](_relayers.length);\\n\\n        for (uint256 i = 0; i < _relayers.length; i++) {\\n            relayers[i].isRegistered = relayerRegistry.isRelayerRegistered(_relayers[i]);\\n            relayers[i].balance = 0;\\n        }\\n\\n        return relayers;\\n    }\\n}\\n\",\"keccak256\":\"0xec2a564914a5038e8e81b2ee0b5d6fac56dd8b67721a0543c1b8156f7a118f5a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161047238038061047283398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6103df806100936000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806347ff589d1461003b578063575a3ab01461006b575b600080fd5b60005461004e906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61007e61007936600461022d565b61008b565b60405161006291906102f2565b60606000825167ffffffffffffffff8111156100a9576100a96101fb565b6040519080825280602002602001820160405280156100ee57816020015b60408051808201909152600080825260208201528152602001906001900390816100c75790505b50905060005b83518110156101f45760005484516001600160a01b039091169063fb04c9399086908490811061012657610126610343565b60200260200101516040518263ffffffff1660e01b815260040161015991906001600160a01b0391909116815260200190565b602060405180830381865afa158015610176573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019a9190610359565b8282815181106101ac576101ac610343565b6020026020010151602001901515908115158152505060008282815181106101d6576101d6610343565b602090810291909101015152806101ec81610382565b9150506100f4565b5092915050565b634e487b7160e01b600052604160045260246000fd5b80356001600160a01b038116811461022857600080fd5b919050565b6000602080838503121561024057600080fd5b823567ffffffffffffffff8082111561025857600080fd5b818501915085601f83011261026c57600080fd5b81358181111561027e5761027e6101fb565b8060051b604051601f19603f830116810181811085821117156102a3576102a36101fb565b6040529182528482019250838101850191888311156102c157600080fd5b938501935b828510156102e6576102d785610211565b845293850193928501926102c6565b98975050505050505050565b602080825282518282018190526000919060409081850190868401855b8281101561033657815180518552860151151586850152928401929085019060010161030f565b5091979650505050505050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561036b57600080fd5b8151801515811461037b57600080fd5b9392505050565b6000600182016103a257634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220114b9c49bd43e1e47619d5af81275e5b3826bfa7939238eac5c5a409b52dd5e564736f6c63430008130033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c806347ff589d1461003b578063575a3ab01461006b575b600080fd5b60005461004e906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61007e61007936600461022d565b61008b565b60405161006291906102f2565b60606000825167ffffffffffffffff8111156100a9576100a96101fb565b6040519080825280602002602001820160405280156100ee57816020015b60408051808201909152600080825260208201528152602001906001900390816100c75790505b50905060005b83518110156101f45760005484516001600160a01b039091169063fb04c9399086908490811061012657610126610343565b60200260200101516040518263ffffffff1660e01b815260040161015991906001600160a01b0391909116815260200190565b602060405180830381865afa158015610176573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019a9190610359565b8282815181106101ac576101ac610343565b6020026020010151602001901515908115158152505060008282815181106101d6576101d6610343565b602090810291909101015152806101ec81610382565b9150506100f4565b5092915050565b634e487b7160e01b600052604160045260246000fd5b80356001600160a01b038116811461022857600080fd5b919050565b6000602080838503121561024057600080fd5b823567ffffffffffffffff8082111561025857600080fd5b818501915085601f83011261026c57600080fd5b81358181111561027e5761027e6101fb565b8060051b604051601f19603f830116810181811085821117156102a3576102a36101fb565b6040529182528482019250838101850191888311156102c157600080fd5b938501935b828510156102e6576102d785610211565b845293850193928501926102c6565b98975050505050505050565b602080825282518282018190526000919060409081850190868401855b8281101561033657815180518552860151151586850152928401929085019060010161030f565b5091979650505050505050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561036b57600080fd5b8151801515811461037b57600080fd5b9392505050565b6000600182016103a257634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220114b9c49bd43e1e47619d5af81275e5b3826bfa7939238eac5c5a409b52dd5e564736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 5864,
        "contract": "contracts/portalgate/RelayerAggregator.sol:RelayerAggregator",
        "label": "relayerRegistry",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IRelayerRegistry)4838"
      }
    ],
    "types": {
      "t_contract(IRelayerRegistry)4838": {
        "encoding": "inplace",
        "label": "contract IRelayerRegistry",
        "numberOfBytes": "20"
      }
    }
  }
}